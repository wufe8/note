模板类LNK1120:无法解析的外部命令
因为C++中每一个对象所占用的空间大小，是在编译的时候就确定的，在模板类没有真正的被使用之前，编译器是无法知道，模板类中使用模板类型的对象的所占用的空间的大小的。只有模板被真正使用的时候，编译器才知道，模板套用的是什么类型，应该分配多少空间。这也就是模板类为什么只是称之为模板，而不是泛型的缘故。
所以应该在头文件指定参数类型 或者声明和实现全部写在头文件里面

模板类方法LNK2019:无法解析的外部符号
模板声明和实现要放在同一文件夹中

类成员函数指针的正确传递方法
https://blog.csdn.net/u011220857/article/details/37657713
类的成员函数指针作为参数传递给其他函数和普通函数指针的传递是不同的，普通函数指针的传递
只要在参数声明中声明是相同参数个数、类型和相同返回类型的函数指针int (*p)(int)，传递时只需传函数名就可以了.
可是传递成员函数指针用此方法却不能工作。指针是指向一些内存地址的变量，既可以是数据的地址也可以是函数的地址。C++的 成员指针遵从同样的原则。但在类内部没有地址；选择一个类的成员意味着在类中偏移。只有把这个偏移和具体对象的开始地址结合，才能得到实际地址。成员指针的语法要求选择一个对象的同时逆向引用成员指针。

类成员互相引用C4430:两个类头文件相互包含出现的问题 ： 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
https://blog.csdn.net/qq_17242957/article/details/52374548
如classA classB内成员有互相引用 可以在前加入"class classA;" 提前声明 多文件时同理

类模板E0441:缺少类模板的参数列表